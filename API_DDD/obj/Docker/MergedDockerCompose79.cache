name: dockercompose14119979053577723968
services:
  mssqldata:
    entrypoint:
      - /bin/bash
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      mynetwork: null
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password123!
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserver_data
        target: /var/opt/mssql
        volume: {}
  webapis:
    build:
      context: C:\Users\Esparta\Desktop\API_DDD\API_DDD
      dockerfile: WebAPIs/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: webapis
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Esparta\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Esparta\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  mynetwork:
    name: dockercompose14119979053577723968_mynetwork
    driver: bridge
volumes:
  sqlserver_data:
    name: dockercompose14119979053577723968_sqlserver_data
    driver: local